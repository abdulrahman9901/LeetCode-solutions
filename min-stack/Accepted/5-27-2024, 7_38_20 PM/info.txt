{"id":1269593835,"question_id":155,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1716827900,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1269593835/","is_pending":"Not Pending","title":"Min Stack","memory":"20 MB","code":"class MinStack {\nprivate:\n    vector<pair<int, int>> stack;\n    long minVal;\npublic:\n\n    MinStack() {\n       minVal = std::numeric_limits<long>::max();\n    }\n    \n    void push(int val) {\n        if(val < minVal)\n            minVal = val;\n        stack.push_back({val,minVal});   \n    }\n    \n    void pop() {\n        stack.pop_back();\n        if(stack.empty())   \n            minVal = std::numeric_limits<long>::max();\n        else\n            minVal = stack.back().second;\n    }\n    \n    int top() {\n       return stack.back().first;\n    }\n    \n    int getMin() {\n        return minVal;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}