{"id":1295857092,"question_id":199,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1718989879,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1295857092/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void rightSide(TreeNode* root,vector<int> &res ,int level,int &lastLevel ){\n        if(!root)\n            return;\n        if(lastLevel < level){\n            res.push_back(root->val);\n            lastLevel = level;\n        }\n        rightSide(root->right,res,level + 1,lastLevel);\n        rightSide(root->left,res,level + 1,lastLevel);\n    }\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        int lastLevel=0;\n        rightSide(root,res,1,lastLevel);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}