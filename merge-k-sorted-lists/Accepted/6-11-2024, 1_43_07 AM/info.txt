{"id":1284290550,"question_id":23,"lang":"cpp","lang_name":"C++","time":"3 weeks, 4 days","timestamp":1718059387,"status":10,"status_display":"Accepted","runtime":"171 ms","url":"/submissions/detail/1284290550/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"17 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* Merge(ListNode* a , ListNode* b){\n        ListNode* res ;\n        if(a == nullptr)\n            return b;\n        if(b == nullptr)\n            return a;\n        if(a->val <= b->val){\n            res=a;\n            res->next = Merge(a->next , b);\n        }else{\n            res=b;\n            res->next = Merge(a , b->next);\n        }\n        return res;\n    }\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        if(lists.size()==0)\n            return nullptr;\n        for(int i = 1 ; i < lists.size() ; ++i){\n            lists[0] = Merge(lists[0],lists[i]);\n        }\n        return lists[0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}