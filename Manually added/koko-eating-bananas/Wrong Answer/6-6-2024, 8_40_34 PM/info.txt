{"id":1279792065,"question_id":907,"lang":"cpp","lang_name":"C++","time":"4 weeks, 1 day","timestamp":1717695634,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1279792065/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution {\npublic:\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int maxVal = *max_element(piles.begin(), piles.end());\n        int left = 1 , right = maxVal , k , th=0;\n        while(left <= right){\n            th = 0 ;\n            k = (right + left)/2;\n            for(auto pile:piles){\n                th+=ceil(double(pile)/k);\n            }\n            cout<<k<<\" : \"<<th<<endl;\n            if(th > h){\n                left = k + 1;\n            }else if(th < h) {\n                right = k - 1; \n            }else{\n                break;\n            }\n        }  \n        return k;\n    }\n};","compare_result":"111100100001111000111000011001101000110110111110101000100110110010101011100100101100110010001111110000011011110110011010100000","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}