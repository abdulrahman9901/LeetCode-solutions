{"id":493827392,"question_id":1114,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621144433,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/493827392/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"8.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int x=0;\npublic:\n    void conv(TreeNode* root){\n        if(root==nullptr)\n            return ;\n      conv(root->right);\n       root->val+=x;\n        x=root->val;\n       conv(root->left);\n    }\n    TreeNode* bstToGst(TreeNode* root) {\n         conv(root);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree","has_notes":false,"flag_type":1}