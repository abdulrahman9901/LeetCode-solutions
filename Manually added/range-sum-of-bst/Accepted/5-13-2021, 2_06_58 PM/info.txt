{"id":492606817,"question_id":975,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1620907618,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/492606817/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        if(root==nullptr)\n            return 0;\n        else {\n            if(root->val >=low && root->val <=high)\n                 return root->val+rangeSumBST(root->left,low,high)+rangeSumBST(root->right,low,high);\n            else\n                 return rangeSumBST(root->left,low,high)+rangeSumBST(root->right,low,high);\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}