{"id":483987525,"question_id":2,"lang":"cpp","lang_name":"C++","time":"3 years, 2 months","timestamp":1619125264,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/483987525/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addNode(ListNode* cur,int val){\n            cur->next=new ListNode(val);\n        return (cur->next);\n    }\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        auto cur1=l1,cur2=l2;\n        int cry=0;\n        int sum=cur1->val+cur2->val+cry;\n        cry=sum/10;\n        sum=sum%10;\n        ListNode* res=new ListNode(sum);\n        auto cur=res;\n            while(cur1->next!=nullptr && cur2->next!=nullptr){\n                cur1=cur1->next;\n                cur2=cur2->next;\n                sum=cur1->val+cur2->val+cry;\n                cry=sum/10;\n                sum=sum%10;\n                cur=addNode(cur,sum);\n                \n          } if(cur1->next==nullptr){\n                while(cur2->next!=nullptr){\n                cur2=cur2->next;\n                sum=cur2->val+cry;\n                cry=sum/10;\n                sum=sum%10;\n                cur=addNode(cur,sum);\n                }\n            }else{\n                while(cur1->next!=nullptr){\n                cur1=cur1->next;\n                sum=cur1->val+cry;\n                cry=sum/10;\n                sum=sum%10;\n                cur=addNode(cur,sum);\n                }\n             if(cry==1)\n                 cur=addNode(cur,1);\n            }\n        return res;\n    }\n};","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}