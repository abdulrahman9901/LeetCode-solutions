{"id":1197570235,"question_id":141,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1709896901,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/1197570235/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"13.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode * current = head;\n        map<ListNode * , bool> visisted ;\n        if(head == nullptr || head->next == nullptr )\n        return false ;\n        while(current->next){\n        if(visisted.contains(current)){\n            return true;\n        }else {\n            visisted[current] = true;\n            current = current->next;\n        }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}