{"id":1197568858,"question_id":141,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1709896764,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1197568858/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode * current = head;\n        map<ListNode * , bool> visisted ;\n        if(visisted.contains(current)){\n            return true;\n        }else {\n            visisted[current] = true;\n            \n        }\n    }\n};","compare_result":null,"title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}