{"id":1281977902,"question_id":138,"lang":"cpp","lang_name":"C++","time":"3 weeks, 6 days","timestamp":1717870871,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1281977902/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"13.4 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if(!head){\n            return head;\n        }\n        Node* newList = new Node(head->val);\n        map<Node* , Node* > addressMap;\n        Node* oldCurrent = head->next , *newCurrent = newList;\n        addressMap[head] = newList;\n        while(oldCurrent){\n            newCurrent->next = new Node(oldCurrent->val);\n            addressMap[oldCurrent] = newCurrent->next;\n            oldCurrent = oldCurrent->next;\n            newCurrent = newCurrent->next;\n        }\n        oldCurrent = head ; newCurrent = newList;\n        while(oldCurrent){\n            newCurrent->random = addressMap[oldCurrent->random];\n            oldCurrent = oldCurrent->next;\n            newCurrent = newCurrent->next;\n        }\n        return newList;\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false,"flag_type":1}