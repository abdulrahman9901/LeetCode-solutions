{"id":1292643642,"question_id":104,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1718729873,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1292643642/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"17.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(root == nullptr)\n            return 0;\n        else {\n            return max(maxDepth(root->left),maxDepth(root->right)) + 1;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}