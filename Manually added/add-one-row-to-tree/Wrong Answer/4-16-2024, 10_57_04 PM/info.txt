{"id":1234330861,"question_id":623,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1713301024,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1234330861/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void addRow (TreeNode* node, int val, int depth , TreeNode* parent , char side){\n        if(depth==1){\n            TreeNode * right;\n            TreeNode * left ;\n            if(side == 'R')\n            {   \n                right = new TreeNode(val,nullptr,parent->right); \n                parent->right = right;\n            }\n            else if (side == 'L')\n            {\n                left = new TreeNode(val,parent->left,nullptr);\n                parent->left = left;\n             }\n        }else {\n            if(node->right)\n                addRow(node->right,val,depth-1,node,'R');\n            if(node->left)\n                addRow(node->left,val,depth-1,node,'L');\n        }\n    }\n    TreeNode* addOneRow(TreeNode* root, int val, int depth) {\n        addRow(root,val,depth,root,'N');\n        return root;\n    }\n};","compare_result":"1100000000000000100001000000011000011001000101001001001001101000000000100001000000000000001001000000000000000","title_slug":"add-one-row-to-tree","has_notes":false,"flag_type":1}