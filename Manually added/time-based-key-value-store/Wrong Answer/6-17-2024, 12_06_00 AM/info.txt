{"id":1290510612,"question_id":1023,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1718571960,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1290510612/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"N/A","code":"class Node {\n    public:\n    string key;\n    string value;\n    Node * next;\n    Node * prev;\n    Node(string key ,string value , Node * next = nullptr,Node * prev = nullptr) :key(key),value(value),next(next),prev(prev)\n    {}\n};\nclass TimeMap {\npublic:\n    map<int,Node*> tMap ;\n    TimeMap() {\n\n    }\n    \n    void set(string key, string value, int timestamp) {\n        tMap[timestamp] = new Node(key,value);\n    }\n    \n    string get(string key, int timestamp) {\n        auto it = tMap.lower_bound(timestamp);\n\n        if (it == tMap.end() || it->first > timestamp) {\n            --it;\n        }\n\n        cout<<tMap[it->first]->value<<endl;\n        return tMap[it->first]->value;\n    }\n};\n\n/**\n * Your TimeMap object will be instantiated and called as such:\n * TimeMap* obj = new TimeMap();\n * obj->set(key,value,timestamp);\n * string param_2 = obj->get(key,timestamp);\n */","compare_result":"101000000000000000000000000000000000000000001101110","title_slug":"time-based-key-value-store","has_notes":false,"flag_type":1}