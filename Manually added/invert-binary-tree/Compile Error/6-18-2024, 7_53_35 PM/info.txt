{"id":1292638603,"question_id":226,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1718729615,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1292638603/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(root && (root->left || root->right)){\n            auto temp =  root->left;\n            root->left =  root->right;\n            root->right =  temp;\n            auto tempNode = invertTree(root->left) || invertTree(root->right);\n=        } \n        return root;\n    }\n};","compare_result":null,"title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}