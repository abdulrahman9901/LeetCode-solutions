{"id":495729856,"question_id":107,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621502921,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/495729856/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n     vector<vector<int>> v;\npublic:\n    int getdepth(TreeNode* root){\n        if(root==nullptr)\n            return 0;\n        return max(getdepth(root->left),getdepth(root->right))+1;\n    }\n    void level(TreeNode* root,int index){\n        if(root==nullptr)\n            return;\n        v[index].push_back(root->val);\n        level(root->left,index-1);\n        level(root->right,index-1);\n    }\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        int depth=getdepth(root);\n        v.assign(depth,{});\n        level(root,depth-1);\n        return v;\n    }\n};\n","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}