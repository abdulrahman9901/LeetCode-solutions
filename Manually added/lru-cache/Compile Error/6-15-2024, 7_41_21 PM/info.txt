{"id":1289241151,"question_id":146,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1718469681,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1289241151/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"class Node {\n    public:\n    int key ;\n    int value ;\n    Node * next;\n    Node * prev;\n\n    Node(int key , int value , Node * next = nullptr,Node * prev = nullptr){\n        this->key = key;\n        this->value = value;\n        this->next = next;\n        this->prev = prev;\n    }\n  \n};\nclass LRUCache {\n    Node * tail;\n    Node * head;\n    int capacity ;\n    map<int ,Node*> cache;\n\n    void moveToHead(Node * node){\n        if(node->next){\n            node->next->prev =  node->prev;\n            node->next =  head;\n            node->prev =  nullptr;\n        }else {\n            \n        }\n    }\npublic:\n    LRUCache(int capacity) {\n        this->capacity = capacity;\n        this->head = nullptr;\n        this->tail = nullptr;\n    }\n    int get(int key) {\n        \n    }\n    \n    void put(int key, int value) {\n        \n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */","compare_result":null,"title_slug":"lru-cache","has_notes":false,"flag_type":1}