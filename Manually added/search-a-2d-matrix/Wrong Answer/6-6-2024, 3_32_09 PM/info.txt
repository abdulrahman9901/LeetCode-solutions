{"id":1279505378,"question_id":74,"lang":"cpp","lang_name":"C++","time":"4 weeks, 1 day","timestamp":1717677129,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1279505378/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int row = 0 , col = 0 , m = matrix.size() , n=matrix[0].size();\n        int left = 0 , right = n ,up = 0, down = m ,mid ;\n        while(up < down){\n            mid = (up + down ) /2 ;\n            if(target > matrix[mid][0]){\n                if(target >=matrix[mid][n-1]){\n                row = mid;\n                break;\n                }\n             if(down == mid)\n                break;\n            down = mid;\n            }else if (target < matrix[mid][0]){\n                if(up == mid)\n                    break;\n                up = mid;\n            }else{\n                return true;\n            }\n        }\n        cout<<row<<endl;\n        while(left < right){\n            mid = (left + right)/2; \n            if(matrix[row][mid] == target ){\n                return true;\n            }else if (matrix[row][mid] < target) {\n                if(left == mid)\n                    break;\n                left = mid;\n            }else {\n                if(right == mid)\n                    break;\n                right = mid;\n            }\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111110111111111111111111101011010101011111111111111111111111111111111111111111101110101110101100101111101111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}