{"id":492811917,"question_id":671,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1620948012,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/492811917/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void in_order_noRepeat(TreeNode* root){\n        if(root!=nullptr){\n            in_order_noRepeat(root->left);                \n            if(v.size()==0 || v.end()==find(v.begin(),v.end(),root->val))\n                v.push_back(root->val);\n            in_order_noRepeat(root->right);\n        }\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        in_order_noRepeat(root);\n        sort(v.begin(),v.end());\n        if(v.size()<2)\n            return -1;\n        return v[1];\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree","has_notes":false,"flag_type":1}