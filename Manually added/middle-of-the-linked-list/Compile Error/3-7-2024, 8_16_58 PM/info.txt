{"id":1196952581,"question_id":908,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1709835418,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1196952581/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        int count ; float middle;\n        if(head->next == nullptr){\n            return haed;\n        }\n        ListNode* current = head;\n        while(node->next){\n            current=current->next;\n        }\n        count = node->val;\n        \n        middle = floor(count/2.0);\n        while(middle--){\n\n        }\n    }\n};","compare_result":null,"title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}