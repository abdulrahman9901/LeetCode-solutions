{"id":1292953303,"question_id":110,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1718756124,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1292953303/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int edges(TreeNode* root, int &diff){\n        if(root == nullptr)\n            return 0;\n        else {\n            int leftE = edges(root->left,diff);\n            int rightE = edges(root->right,diff);\n            diff = max(diff,abs(leftE-rightE));\n            cout<<diff<<endl;\n            return max(leftE,rightE)+1;\n        }\n    }\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(root == nullptr)\n            return true;\n        else {\n            int diff = 0;\n            edges(root,diff);\n            return diff <=1;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}