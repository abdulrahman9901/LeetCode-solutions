{"id":1295965601,"question_id":98,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1718996980,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1295965601/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValid(TreeNode* node ,int min,int max ,string pos){\n        if(!node)\n            return true;   \n        if((pos  == \"H\" )|| (node->val < max && node->val > min))\n            return isValid(node->left,INT_MIN,max,\"L\") && \n                   isValid(node->right,max,INT_MAX,\"R\");\n        else\n            return false;\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root,root->val,root->val,\"H\");\n    }\n};","compare_result":"1111111111111111101111010110010000100001110110111111001100010111111010101110011110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}