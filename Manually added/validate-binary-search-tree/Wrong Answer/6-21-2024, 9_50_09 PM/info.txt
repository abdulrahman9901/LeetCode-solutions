{"id":1295950072,"question_id":98,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1718995809,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1295950072/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValid(TreeNode* node ,int parent,const int rootVal ,char pos){\n        if(!node)\n            return true;   \n        if((pos  == 'L' && node->val < parent && node->val < rootVal) ||\n           (pos  == 'R' && node->val >= parent && node->val >= rootVal))\n            return isValid(node->left,node->val,rootVal,'L') && isValid(node->right,node->val,rootVal,'R');\n        else\n            return false;\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root,root->val,root->val,'R');\n    }\n};","compare_result":"1111110111110110101111001110001000000011110110111111101101110111100111111010011110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}