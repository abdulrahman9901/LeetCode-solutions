{"id":1296983516,"question_id":98,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1719080387,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1296983516/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValid(TreeNode* node,int min,int max ){\n        if(!node)\n            return true;   \n        if(node->val < max && node->val > min){\n            cout<<node->val<<\" : \"<< max <<\" : \"<< min<<endl;\n            return isValid(node->left,min,node->val) && \n                   isValid(node->right,node->val,max);\n        }\n        else\n            return false;\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root,INT_MIN,INT_MAX);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111001111010101110011110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}