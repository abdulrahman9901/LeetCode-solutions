{"id":1273491014,"question_id":11,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1717176037,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1273491014/","is_pending":"Not Pending","title":"Container With Most Water","memory":"N/A","code":"class Solution {\npublic:\n    int maxArea(vector<int>& height) {\n        vector<pair<int,int>> sortedHeights;\n        int maxVal = 0 , st = 0;\n        for(int i = 0 ; i < height.size() ; ++i){\n            sortedHeights.push_back({height[i],i});\n        }\n        sort(sortedHeights.begin(),sortedHeights.end(),std::greater());\n        for(int i = 1 ; i < height.size() ; ++i){\n            while(abs(sortedHeights[i].second - sortedHeights[st].second) < abs(sortedHeights[i].second - sortedHeights[st+1].second)){\n                cout<< sortedHeights[st].second <<\" : \"<< sortedHeights[st+1].second <<endl;\n                st++;\n            }\n            int temp = sortedHeights[i].first * abs(sortedHeights[i].second - sortedHeights[st].second);\n            if(maxVal < temp){\n                maxVal = temp;\n            }\n        }\n        \n        return maxVal;\n    }\n};","compare_result":"11111111111111111111111111111111010100111110001000000101000111","title_slug":"container-with-most-water","has_notes":false,"flag_type":1}