{"id":508737677,"question_id":1079,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1623842651,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/508737677/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"28.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   /*  int to_decimal(string s,int index=0){\n      if(index >= s.size())\n        return 0;\n      else\n        return (s[index]-'0')*pow(2,index)+to_decimal(s,index+1);\n    }\n    */\n    int sum(TreeNode* root,stack<int>s){\n        if(root==nullptr)\n            return 0;\n        if(root->left==nullptr && root->right==nullptr){\n            s.push(root->val);\n            int S=0,n=0;\n            while(!s.empty()){\n                S+=s.top()*pow(2,n++);\n                s.pop();\n            }\n            return S;\n        }\n            else{\n                s.push(root->val);\n                return sum(root->left,s)+sum(root->right,s);\n            }\n    }\n    int sumRootToLeaf(TreeNode* root) {\n        stack<int>s;\n        return sum(root,s);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers","has_notes":false,"flag_type":1}