{"id":496182005,"question_id":148,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621589104,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/496182005/","is_pending":"Not Pending","title":"Sort List","memory":"N/A","code":"/**\n\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    ListNode* newhead;\n    void merge(ListNode* start, ListNode* end) {\n        if (start == nullptr || start == end)\n            return;\n        ListNode* current = start->next, * prev = start, * oldhead = start;\n        while (current != end) {\n            if (current->val < oldhead->val) {\n                prev->next = current->next;\n                current->next = start;\n                start = current;\n                current = oldhead;\n                newhead = start;\n            }\n            prev = current;\n            current = current->next;\n        }\n        merge(start, oldhead);\n        merge(oldhead->next,end);\n    }\npublic:\n    ListNode* sortList(ListNode* head) {\n        merge(head, nullptr);\n        return newhead;\n    }\n};","compare_result":"1010111101000000000000000000","title_slug":"sort-list","has_notes":false,"flag_type":1}