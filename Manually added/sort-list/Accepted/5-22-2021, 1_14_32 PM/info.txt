{"id":496612469,"question_id":148,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621682072,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/496612469/","is_pending":"Not Pending","title":"Sort List","memory":"30.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n class Solution {\n     void split(ListNode* head,ListNode*& a, ListNode*& b) {\n         ListNode* first = head->next, * slow = head;\n         while (first != nullptr) {\n             first = first->next;\n             if (first != nullptr) {\n                 first = first->next;\n                 slow = slow->next;\n             }\n         }\n         a = head;\n         b = slow->next;\n         slow->next = nullptr;\n     }\n     ListNode* merge(ListNode* a, ListNode* b) {\n         ListNode* res;\n         if (a == nullptr)\n             return b;\n         else if (b == nullptr)\n             return a;\n         if (a->val <= b->val) {\n             res = a;\n             res->next = merge(a->next, b);\n         }\n         else {\n             res = b;\n             res->next = merge(a, b->next);\n         }\n         return res;\n     }\n    void sort(ListNode* &head) {\n         ListNode* a, * b;\n         if (head == nullptr || head->next == nullptr)\n             return;\n          split(head,a, b);\n            \n          sort(a);\n          sort(b);\n          head = merge(a, b);\n     }\n public:\n     ListNode* sortList(ListNode* head) {\n         sort(head);\n         return head;\n     }\n };","compare_result":"1111111111111111111111111111","title_slug":"sort-list","has_notes":false,"flag_type":1}