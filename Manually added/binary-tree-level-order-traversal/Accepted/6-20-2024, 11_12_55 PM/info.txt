{"id":1294983029,"question_id":102,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1718914375,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1294983029/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void traverse(TreeNode* root , vector<vector<int>> &res , int level){\n        if(!root)\n            return;\n        res[level].push_back(root->val);\n        traverse(root->left,res,level+1);\n        traverse(root->right,res,level+1);\n    }\n    int getHeight(TreeNode* root){\n        if(root)\n            return max(getHeight(root->right),getHeight(root->left))+1;\n        else\n            return 0;\n    }\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n       vector<vector<int>> res;    \n       int height = getHeight(root);\n       res = vector<vector<int>>(height,vector<int>(0,0));\n       traverse(root,res,0);\n       return res;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}