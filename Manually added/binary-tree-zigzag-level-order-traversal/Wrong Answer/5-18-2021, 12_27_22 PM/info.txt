{"id":494835006,"question_id":103,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621333642,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/494835006/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    map<int,vector<int>> m;\n    void level_order(TreeNode* root,int index,bool alt){\n        if(root==nullptr)\n            return;\n        m[index].push_back(root->val);\n        if(alt){\n            level_order(root->left,index+1,!alt);\n            level_order(root->right,index+1,!alt);\n        }else{\n            level_order(root->right,index+1,!alt);\n            level_order(root->left,index+1,!alt);\n        }\n    }\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        level_order(root,0,false);\n         vector<vector<int>>v;\n        for(auto iter=m.begin();iter!=m.end();++iter)\n            v.push_back(iter->second);\n        return v;\n    }\n};","compare_result":"111111101101101000001000000100000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}