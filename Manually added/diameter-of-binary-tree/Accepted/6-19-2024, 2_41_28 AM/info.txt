{"id":1292940425,"question_id":543,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1718754088,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1292940425/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"22.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int maxD(TreeNode* root , int &md){\n        if(root == nullptr)\n            return 0;\n        else {\n            int leftedges = maxD(root->left,md);\n            int rightedges = maxD(root->right,md);\n            md = max(md,leftedges+rightedges);\n            return max(leftedges,rightedges)+1;\n        }\n    }\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(root == nullptr || (!root->left && !root->right))\n            return 0;\n        int di = 0;\n        maxD(root,di);\n        return di;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}