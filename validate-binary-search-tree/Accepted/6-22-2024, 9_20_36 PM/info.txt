{"id":1296984272,"question_id":98,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1719080436,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1296984272/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValid(TreeNode* node,long min,long max ){\n        if(!node)\n            return true;   \n        if(node->val < max && node->val > min){\n            cout<<node->val<<\" : \"<< max <<\" : \"<< min<<endl;\n            return isValid(node->left,min,node->val) && \n                   isValid(node->right,node->val,max);\n        }\n        else\n            return false;\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root,(long)INT_MIN-1,(long)INT_MAX+1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}