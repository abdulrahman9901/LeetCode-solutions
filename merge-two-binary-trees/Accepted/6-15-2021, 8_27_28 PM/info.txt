{"id":508407055,"question_id":617,"lang":"cpp","lang_name":"C++","time":"3Â years","timestamp":1623781648,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/508407055/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"33.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void build (TreeNode* root1, TreeNode* root2,TreeNode* &root3){\n        if(root1!=nullptr & root2!=nullptr ){\n            root3=new TreeNode (root1->val + root2->val);\n            build(root1->left,root2->left,root3->left);\n            build(root1->right,root2->right,root3->right);\n        }\n        else if(root1!=nullptr ){\n                root3=new TreeNode (root1->val);\n            build(root1->left,nullptr,root3->left);\n            build(root1->right,nullptr,root3->right);\n        }\n        else if(root2!=nullptr ){\n                root3=new TreeNode (root2->val);\n            build(nullptr,root2->left,root3->left);\n            build(nullptr,root2->right,root3->right);\n        }else{\n            return;\n        }\n    }\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        TreeNode* root3=nullptr;\n        build(root1,root2,root3);\n        return root3;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false,"flag_type":1}