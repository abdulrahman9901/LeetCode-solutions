{"id":492806381,"question_id":144,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1620946492,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/492806381/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n      vector<int> v;\n    void pre_order(TreeNode* root){\n        if(root!=nullptr){\n            v.push_back(root->val);\n            pre_order(root->left);\n            pre_order(root->right);\n        }\n    }\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n          pre_order(root);\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}