{"id":492844155,"question_id":1498,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1620956483,"status":10,"status_display":"Accepted","runtime":"468 ms","url":"/submissions/detail/492844155/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"164 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n\n    TreeNode* res=nullptr;\n    void in_order(TreeNode* root,TreeNode *target){\n        if(root!=nullptr){\n            in_order(root->left,target);  \n                if(root->val==target->val){\n                    res=root;\n                    return;\n                }\n            in_order(root->right,target);\n        }\n    }\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        in_order(cloned,target);\n            return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"flag_type":1}