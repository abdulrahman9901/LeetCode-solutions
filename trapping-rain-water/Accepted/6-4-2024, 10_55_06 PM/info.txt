{"id":1277806863,"question_id":42,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1717530906,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1277806863/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"22.4 MB","code":"class Solution {\npublic:\n    int trap(vector<int>& height) {\n        int n = height.size() ;\n        int maxLeft[n] , maxRight[n] , trappedWater = 0;\n        maxLeft[0]=height[0];\n        maxRight[n-1]=height[n-1];\n        for(int i = 1 ; i< n ; ++i){\n           maxLeft[i] = max(maxLeft[i-1] , height[i-1]);\n           maxRight[n-i-1] = max(maxRight[n-i] , height[n-i]);\n        }\n        for(int i = 0 ; i< n ; ++i){\n        trappedWater += min(maxLeft[i],maxRight[i]) - height[i] > 0 ?\n            min(maxLeft[i],maxRight[i]) - height[i] : 0 ;\n        }\n        return trappedWater ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}