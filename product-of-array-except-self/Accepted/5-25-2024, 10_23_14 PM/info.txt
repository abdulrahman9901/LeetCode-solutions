{"id":1267828409,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1716664994,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1267828409/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"38.2 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int n = nums.size() , prod = 1;\n        vector<int> res(n,0), zeros;\n        // for(int i = 0;i<nums.size();++i){\n        //     int num = 1;\n        //     for(int j = 0;j<nums.size();++j){\n        //         if(i==j)\n        //             continue;\n        //         num*=nums[j];\n        //     }\n        //     res.push_back(num);\n        // }\n\n        for(int j = 0;j<n;++j){\n            if(0==nums[j]){\n                zeros.push_back(j);\n                continue;\n            }else\n                prod*=nums[j];\n        }\n        if(zeros.size() == 1){\n            res[zeros[0]] = prod;\n        }else if (zeros.size() == 0){\n            for(int j = 0;j<n;++j){\n                res[j] = prod/nums[j];\n            }\n        }\n        return res;\n    }   \n};","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}