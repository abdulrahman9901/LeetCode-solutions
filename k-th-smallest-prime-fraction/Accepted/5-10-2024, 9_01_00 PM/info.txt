{"id":1254614367,"question_id":802,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1715364060,"status":10,"status_display":"Accepted","runtime":"296 ms","url":"/submissions/detail/1254614367/","is_pending":"Not Pending","title":"K-th Smallest Prime Fraction","memory":"120.6 MB","code":"class Solution {\npublic:\n    vector<int>kthSmallestPrimeFraction(vector<int>& arr, int k) {\n        std::vector<std::pair<std::pair<int, int>, double>> fractions ;\n        for(int j=1 ; j < arr.size();j++){\n            for(int i=0 ; i < j ;i++){\n                double temp =double(arr[i])/arr[j];\n                    fractions.push_back({{arr[i],arr[j]},temp});\n            }\n        }\n        sort(fractions.begin(),fractions.end(),[](const auto& lhs, const auto& rhs) {\n        return lhs.second < rhs.second;\n    });\n        auto it = fractions.begin();\n        std::advance(it, k-1 ); // Move the iterator to the kth element\n        return {it->first.first,it->first.second};\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"k-th-smallest-prime-fraction","has_notes":false,"flag_type":1}