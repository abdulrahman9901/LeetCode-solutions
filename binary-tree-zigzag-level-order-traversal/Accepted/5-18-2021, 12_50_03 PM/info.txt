{"id":494840714,"question_id":103,"lang":"cpp","lang_name":"C++","time":"3 years, 1 month","timestamp":1621335003,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/494840714/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"13.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    map<int,vector<int>> m;\n    void level_order(TreeNode* root,int index){\n        if(root==nullptr)\n            return;\n        m[index].push_back(root->val);\n        level_order(root->left,index+1);\n        level_order(root->right,index+1);\n    }\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        level_order(root,0);\n        bool alt=false;\n         vector<vector<int>>v;\n        for(auto iter=m.begin();iter!=m.end();++iter){\n            auto v1=iter->second;\n            if(alt)\n            reverse(v1.begin(),v1.end());\n          \n            v.push_back(v1);\n            alt=!alt;\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}