{"id":1289434775,"question_id":25,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1718484594,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1289434775/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"15.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        vector<ListNode*> groups;\n        ListNode* current = head , *groupSt = head;\n        int size = 0;\n        while(current){\n            size++;\n            groups.push_back(current);\n            if(size == k){\n               for(int i = 0 ; i <  k/2 ; ++i){\n                int temp = groups[i]->val;\n                groups[i]->val = groups[k-1-i]->val;\n                groups[-i+k-1]->val = temp;\n               }\n               groups.erase(groups.begin(), groups.end());  \n               size = 0;\n            }\n            current = current->next;\n        }\n        return head;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}