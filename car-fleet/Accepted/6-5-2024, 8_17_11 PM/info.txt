{"id":1278688671,"question_id":883,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1717607831,"status":10,"status_display":"Accepted","runtime":"138 ms","url":"/submissions/detail/1278688671/","is_pending":"Not Pending","title":"Car Fleet","memory":"82.2 MB","code":"class Solution {\npublic:\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        int len = speed.size();\n        stack<double> fleets;\n        vector<pair<int,int>> cars;\n\n        while(true){\n            for(int i=0 ;i < len ; ++i){\n                cars.push_back({position[i],speed[i]});\n            }\n            sort(cars.begin(),cars.end(),std::greater());\n\n            for(auto car:cars){\n               double time = double(target - car.first)/car.second ;\n                if(!fleets.empty()){\n                    if(time > fleets.top())\n                        fleets.push(time);\n                }else {\n                    fleets.push(time);\n                }\n            }\n            return fleets.size();\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"car-fleet","has_notes":false,"flag_type":1}